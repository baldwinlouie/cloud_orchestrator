<?php

use Drupal\Component\Serialization\Yaml;
use Drupal\Core\StreamWrapper\PrivateStream;
use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;

/**
 * Implements hook_requirements().
 */
function cloud_orchestrator_requirements($phase) {
  $requirements = [];
  if ($phase == 'install') {
    if (!PrivateStream::basePath()) {
      $requirements['private file stream'] = [
        'title' => t('Private file directory not set'),
        'description' => t('The file_private_path needs to be set in settings.php.  It needs to be writable by the web server.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
    else {
      $directory = PrivateStream::basePath();
      $is_writeable = is_writable($directory);
      $is_directory = is_dir($directory);
      if (!$is_writeable || !$is_directory) {
        if (!$is_directory) {
          $error = t('The directory %directory does not exist.', ['%directory' => $directory]);
        }
        else {
          $error = t('The directory %directory is not writable.', ['%directory' => $directory]);
        }
        $requirements['private file stream'] = [
          'title' => t('Not writable'),
          'description' => $error,
          'severity' => REQUIREMENT_ERROR,
        ];
      }
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 *
 * Perform actions to set up the cloud_orchestrator profile.
 */
function cloud_orchestrator_install() {
  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // Import default content.
  cloud_orchestrator_import_content();

  \Drupal::configFactory()->getEditable('aws_cloud.settings')->set('aws_cloud_instance_type_prices_spreadsheet', FALSE)->save();
  // Set the homepage
  \Drupal::configFactory()->getEditable('system.site')->set('page.front', '/dashboard')->save(TRUE);

  // Remove access content from Anonymous user
  user_role_revoke_permissions(RoleInterface::ANONYMOUS_ID, ['access content']);
  // We install some menu links, so we have to rebuild the router, to ensure the
  // menu links are valid.
  \Drupal::service('router.builder')->rebuildIfNeeded();
}

/**
 * Import default content into the site.
 */
function cloud_orchestrator_import_content() {
  $files = [
    'welcome_page.yml',
  ];
  $path = \Drupal::moduleHandler()->getModule('cloud_orchestrator')->getPath();
  foreach ($files as $file) {
    $content_path = $path . '/default_content/' . $file;
    if (file_exists($content_path) && ($handle = fopen($content_path, 'r')) !== FALSE) {
      $contents = fread($handle, filesize($content_path));
      if (!empty($contents)) {
        $data = Yaml::decode($contents);
        $entity = \Drupal::entityTypeManager()
          ->getStorage('node')
          ->create($data);
        $entity->save();
      }
    }
  }
}